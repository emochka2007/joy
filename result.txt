M: def [uncons dup first swap rest] def [filter is_empty_dip [] [uncons rot dup rot swap dup rot i [] [swap drop] if filter] if] def [0 >] [-1 2 -3] filter
Stack: [is_empty_dip [dup null] dip swap] 
------------------------------
M: [uncons dup first swap rest] def [filter is_empty_dip [] [uncons rot dup rot swap dup rot i [] [swap drop] if filter] if] def [0 >] [-1 2 -3] filter
Stack: 
------------------------------
M: def [filter is_empty_dip [] [uncons rot dup rot swap dup rot i [] [swap drop] if filter] if] def [0 >] [-1 2 -3] filter
Stack: [uncons dup first swap rest] 
------------------------------
M: [filter is_empty_dip [] [uncons rot dup rot swap dup rot i [] [swap drop] if filter] if] def [0 >] [-1 2 -3] filter
Stack: 
------------------------------
M: def [0 >] [-1 2 -3] filter
Stack: [filter is_empty_dip [] [uncons rot dup rot swap dup rot i [] [swap drop] if filter] if] 
------------------------------
M: [0 >] [-1 2 -3] filter
Stack: 
------------------------------
M: [-1 2 -3] filter
Stack: [0 >] 
------------------------------
M: filter
Stack: [0 >] [-1 2 -3] 
------------------------------
M: is_empty_dip [] [uncons rot dup rot swap dup rot i [] [swap drop] if filter] if
Stack: [0 >] [-1 2 -3] 
------------------------------
M: [dup null] dip swap [] [uncons rot dup rot swap dup rot i [] [swap drop] if filter] if
Stack: [0 >] [-1 2 -3] 
------------------------------
M: dip swap [] [uncons rot dup rot swap dup rot i [] [swap drop] if filter] if
Stack: [0 >] [-1 2 -3] [dup null] 
------------------------------
M: dup null [-1 2 -3] swap [] [uncons rot dup rot swap dup rot i [] [swap drop] if filter] if
Stack: [0 >] 
------------------------------
M: null [-1 2 -3] swap [] [uncons rot dup rot swap dup rot i [] [swap drop] if filter] if
Stack: [0 >] [0 >] 
------------------------------
M: [-1 2 -3] swap [] [uncons rot dup rot swap dup rot i [] [swap drop] if filter] if
Stack: [0 >] False
------------------------------
M: swap [] [uncons rot dup rot swap dup rot i [] [swap drop] if filter] if
Stack: [0 >] False [-1 2 -3] 
------------------------------
M: [] [uncons rot dup rot swap dup rot i [] [swap drop] if filter] if
Stack: [0 >] [-1 2 -3] False
------------------------------
M: [uncons rot dup rot swap dup rot i [] [swap drop] if filter] if
Stack: [0 >] [-1 2 -3] False [] 
------------------------------
M: if
Stack: [0 >] [-1 2 -3] False [] [uncons rot dup rot swap dup rot i [] [swap drop] if filter] 
------------------------------
M: uncons rot dup rot swap dup rot i [] [swap drop] if filter
Stack: [0 >] [-1 2 -3] 
------------------------------
M: dup first swap rest rot dup rot swap dup rot i [] [swap drop] if filter
Stack: [0 >] [-1 2 -3] 
------------------------------
M: first swap rest rot dup rot swap dup rot i [] [swap drop] if filter
Stack: [0 >] [-1 2 -3] [-1 2 -3] 
------------------------------
M: swap rest rot dup rot swap dup rot i [] [swap drop] if filter
Stack: [0 >] [-1 2 -3] -1
------------------------------
M: rest rot dup rot swap dup rot i [] [swap drop] if filter
Stack: [0 >] -1 [-1 2 -3] 
------------------------------
M: rot dup rot swap dup rot i [] [swap drop] if filter
Stack: [0 >] -1 [2 -3] 
------------------------------
M: dup rot swap dup rot i [] [swap drop] if filter
Stack: [2 -3] [0 >] -1
------------------------------
M: rot swap dup rot i [] [swap drop] if filter
Stack: [2 -3] [0 >] -1 -1
------------------------------
M: swap dup rot i [] [swap drop] if filter
Stack: [2 -3] -1 [0 >] -1
------------------------------
M: dup rot i [] [swap drop] if filter
Stack: [2 -3] -1 -1 [0 >] 
------------------------------
M: rot i [] [swap drop] if filter
Stack: [2 -3] -1 -1 [0 >] [0 >] 
------------------------------
M: i [] [swap drop] if filter
Stack: [2 -3] -1 [0 >] -1 [0 >] 
------------------------------
M: 0 > [] [swap drop] if filter
Stack: [2 -3] -1 [0 >] -1
------------------------------
M: > [] [swap drop] if filter
Stack: [2 -3] -1 [0 >] -1 0
------------------------------
M: [] [swap drop] if filter
Stack: [2 -3] -1 [0 >] False
------------------------------
M: [swap drop] if filter
Stack: [2 -3] -1 [0 >] False [] 
------------------------------
M: if filter
Stack: [2 -3] -1 [0 >] False [] [swap drop] 
------------------------------
M: swap drop filter
Stack: [2 -3] -1 [0 >] 
------------------------------
M: drop filter
Stack: [2 -3] [0 >] -1
------------------------------
M: filter
Stack: [2 -3] [0 >] 
------------------------------
M: is_empty_dip [] [uncons rot dup rot swap dup rot i [] [swap drop] if filter] if
Stack: [2 -3] [0 >] 
------------------------------
M: [dup null] dip swap [] [uncons rot dup rot swap dup rot i [] [swap drop] if filter] if
Stack: [2 -3] [0 >] 
------------------------------
M: dip swap [] [uncons rot dup rot swap dup rot i [] [swap drop] if filter] if
Stack: [2 -3] [0 >] [dup null] 
------------------------------
M: dup null [0 >] swap [] [uncons rot dup rot swap dup rot i [] [swap drop] if filter] if
Stack: [2 -3] 
------------------------------
M: null [0 >] swap [] [uncons rot dup rot swap dup rot i [] [swap drop] if filter] if
Stack: [2 -3] [2 -3] 
------------------------------
M: [0 >] swap [] [uncons rot dup rot swap dup rot i [] [swap drop] if filter] if
Stack: [2 -3] False
------------------------------
M: swap [] [uncons rot dup rot swap dup rot i [] [swap drop] if filter] if
Stack: [2 -3] False [0 >] 
------------------------------
M: [] [uncons rot dup rot swap dup rot i [] [swap drop] if filter] if
Stack: [2 -3] [0 >] False
------------------------------
M: [uncons rot dup rot swap dup rot i [] [swap drop] if filter] if
Stack: [2 -3] [0 >] False [] 
------------------------------
M: if
Stack: [2 -3] [0 >] False [] [uncons rot dup rot swap dup rot i [] [swap drop] if filter] 
------------------------------
M: uncons rot dup rot swap dup rot i [] [swap drop] if filter
Stack: [2 -3] [0 >] 
------------------------------
M: dup first swap rest rot dup rot swap dup rot i [] [swap drop] if filter
Stack: [2 -3] [0 >] 
------------------------------
M: first swap rest rot dup rot swap dup rot i [] [swap drop] if filter
Stack: [2 -3] [0 >] [0 >] 
------------------------------
M: swap rest rot dup rot swap dup rot i [] [swap drop] if filter
Stack: [2 -3] [0 >] 0
------------------------------
M: rest rot dup rot swap dup rot i [] [swap drop] if filter
Stack: [2 -3] 0 [0 >] 
------------------------------
M: rot dup rot swap dup rot i [] [swap drop] if filter
Stack: [2 -3] 0 [>] 
------------------------------
M: dup rot swap dup rot i [] [swap drop] if filter
Stack: [>] [2 -3] 0
------------------------------
M: rot swap dup rot i [] [swap drop] if filter
Stack: [>] [2 -3] 0 0
------------------------------
M: swap dup rot i [] [swap drop] if filter
Stack: [>] 0 [2 -3] 0
------------------------------
M: dup rot i [] [swap drop] if filter
Stack: [>] 0 0 [2 -3] 
------------------------------
M: rot i [] [swap drop] if filter
Stack: [>] 0 0 [2 -3] [2 -3] 
------------------------------
M: i [] [swap drop] if filter
Stack: [>] 0 [2 -3] 0 [2 -3] 
------------------------------
M: 2 -3 [] [swap drop] if filter
Stack: [>] 0 [2 -3] 0
------------------------------
M: -3 [] [swap drop] if filter
Stack: [>] 0 [2 -3] 0 2
------------------------------
M: [] [swap drop] if filter
Stack: [>] 0 [2 -3] 0 2 -3
------------------------------
M: [swap drop] if filter
Stack: [>] 0 [2 -3] 0 2 -3 [] 
------------------------------
M: if filter
Stack: [>] 0 [2 -3] 0 2 -3 [] [swap drop] 
------------------------------
M: filter
Stack: [>] 0 [2 -3] 0 2
------------------------------
M: is_empty_dip [] [uncons rot dup rot swap dup rot i [] [swap drop] if filter] if
Stack: [>] 0 [2 -3] 0 2
------------------------------
M: [dup null] dip swap [] [uncons rot dup rot swap dup rot i [] [swap drop] if filter] if
Stack: [>] 0 [2 -3] 0 2
------------------------------
M: dip swap [] [uncons rot dup rot swap dup rot i [] [swap drop] if filter] if
Stack: [>] 0 [2 -3] 0 2 [dup null] 
------------------------------
M: dup null 2 swap [] [uncons rot dup rot swap dup rot i [] [swap drop] if filter] if
Stack: [>] 0 [2 -3] 0
------------------------------
M: null 2 swap [] [uncons rot dup rot swap dup rot i [] [swap drop] if filter] if
Stack: [>] 0 [2 -3] 0 0
------------------------------
Incorrect type on stack, expected <class 'list'>, received <class 'int'>
